[{"model": "collection.rule", "pk": 1, "fields": {"changed_var_attribute_id": 24, "changed_var_data_type": "int", "condition_text": "", "condition_exec": "", "effect_text": "[Population] + [Population]*([Population growth (%/year)] /100)* [delta_t (years)]", "effect_exec": "df.attr24 + df.attr24*(df.attr28 /100)* (df.delta_t/31622400)", "effect_is_calculation": true, "used_attribute_ids": "[\"24\", \"28\"]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 2, "fields": {"changed_var_attribute_id": 24, "changed_var_data_type": "int", "condition_text": "", "condition_exec": "", "effect_text": "[Population] + ([Female Population]*[Fertility rate]/[Life expectancy for women (years)] ) - ([Population]/[Life expectancy (years)])", "effect_exec": "df.attr24 + (df.attr41*df.attr31/df.attr29 ) - (df.attr24/df.attr26)", "effect_is_calculation": true, "used_attribute_ids": "[\"24\", \"26\", \"29\", \"31\", \"41\"]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 14, "fields": {"changed_var_attribute_id": 56, "changed_var_data_type": "string", "condition_text": "[Petal width] > 1. & [Petal width] < 2.", "condition_exec": "df.attr55 > 1. & df.attr55 < 2.", "effect_text": "'versicolor'", "effect_exec": "\"versicolor\"", "effect_is_calculation": false, "used_attribute_ids": "[\"55\"]", "used_parameter_ids": "[]", "is_conditionless": false, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 15, "fields": {"changed_var_attribute_id": 56, "changed_var_data_type": "string", "condition_text": "[Sepal length]  > 6.", "condition_exec": "df.attr52  > 6.", "effect_text": "'virginica'", "effect_exec": "\"virginica\"", "effect_is_calculation": false, "used_attribute_ids": "[\"52\"]", "used_parameter_ids": "[]", "is_conditionless": false, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 16, "fields": {"changed_var_attribute_id": 56, "changed_var_data_type": "string", "condition_text": "[Petal width] < 0.5", "condition_exec": "df.attr55 < 0.5", "effect_text": "'setosa'", "effect_exec": "\"setosa\"", "effect_is_calculation": false, "used_attribute_ids": "[\"55\"]", "used_parameter_ids": "[]", "is_conditionless": false, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 17, "fields": {"changed_var_attribute_id": 101, "changed_var_data_type": "string", "condition_text": "[Nationality].[Population]  <  10000000", "condition_exec": "df.rel69.attr24  <  10000000", "effect_text": "'Very well'", "effect_exec": "\"Very well\"", "effect_is_calculation": false, "used_attribute_ids": "[\"69\", \"24\"]", "used_parameter_ids": "[]", "is_conditionless": false, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 18, "fields": {"changed_var_attribute_id": 101, "changed_var_data_type": "string", "condition_text": "", "condition_exec": "", "effect_text": "'Very well'", "effect_exec": "\"Very well\"", "effect_is_calculation": false, "used_attribute_ids": "[]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 20, "fields": {"changed_var_attribute_id": 101, "changed_var_data_type": "string", "condition_text": "(2020 - [Year of Entry to United States]) < 3", "condition_exec": "(2020 - df.attr102) < 3", "effect_text": "'Not well'", "effect_exec": "\"Not well\"", "effect_is_calculation": false, "used_attribute_ids": "[\"102\"]", "used_parameter_ids": "[]", "is_conditionless": false, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 23, "fields": {"changed_var_attribute_id": 173, "changed_var_data_type": "real", "condition_text": "", "condition_exec": "", "effect_text": "[Size/ Number of people]", "effect_exec": "df.attr151", "effect_is_calculation": true, "used_attribute_ids": "[\"151\"]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": false, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 31, "fields": {"changed_var_attribute_id": 169, "changed_var_data_type": "real", "condition_text": "[Has Microfinance Loan]", "condition_exec": "df.attr175", "effect_text": "[Monthly expenditure on durable goods (ppp adjusted $)] * [change_factor_durable_expenditure] + [change_amount_durable_expenditure]", "effect_exec": "df.attr169 * df.param44 + df.param43", "effect_is_calculation": true, "used_attribute_ids": "[\"175\", \"169\"]", "used_parameter_ids": "[43, 44]", "is_conditionless": false, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 32, "fields": {"changed_var_attribute_id": 169, "changed_var_data_type": "real", "condition_text": "not [Has Microfinance Loan]", "condition_exec": "not df.attr175", "effect_text": "[Monthly expenditure on durable goods (ppp adjusted $)] * [change_factor_durable_expenditure] + [change_amount_durable_expenditure]", "effect_exec": "df.attr169 * df.param46 + df.param45", "effect_is_calculation": true, "used_attribute_ids": "[\"175\", \"169\"]", "used_parameter_ids": "[45, 46]", "is_conditionless": false, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 33, "fields": {"changed_var_attribute_id": 183, "changed_var_data_type": "bool", "condition_text": "", "condition_exec": "", "effect_text": "[Has Microfinance Loan]", "effect_exec": "df.attr175", "effect_is_calculation": true, "used_attribute_ids": "[\"175\"]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 34, "fields": {"changed_var_attribute_id": 169, "changed_var_data_type": "real", "condition_text": "[Has Microfinance Loan] and not [Has Microfinance Loan (t-1)]", "condition_exec": "df.attr175 and not df.attr183", "effect_text": "[Monthly expenditure on durable goods (ppp adjusted $)] * [durable_expenditure_increase_factor] + [durable_expenditure_increase_value]", "effect_exec": "df.attr169 * df.param47 + df.param48", "effect_is_calculation": true, "used_attribute_ids": "[\"175\", \"183\", \"169\"]", "used_parameter_ids": "[47, 48]", "is_conditionless": false, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 37, "fields": {"changed_var_attribute_id": 175, "changed_var_data_type": "bool", "condition_text": "", "condition_exec": "", "effect_text": "True", "effect_exec": "true", "effect_is_calculation": false, "used_attribute_ids": "[]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 41, "fields": {"changed_var_attribute_id": 185, "changed_var_data_type": "int", "condition_text": "1/(1 + exp(-[y_intercept] - [weight_one_child] * ([Number of biological children] ==1) - [weight_two_children] * ([Number of biological children] ==2) - [weight_more_than_two_children] * ([Number of biological children] >2) - [weight_married] * ([Marital Status] =='Married')  - [weight_age] * [Age] - [weight_age_2] * [Age] * [Age]  )) > df.randomNumber", "condition_exec": "1/(1 + exp(-df.param52 - df.param50 * (df.attr185 ==1) - df.param51 * (df.attr185 ==2) - df.param57 * (df.attr185 >2) - df.param58 * (\"df.attr92\" =='Married')  - df.param59 * df.attr90 - df.param60 * df.attr90 * df.attr90  )) > df.randomNumber", "effect_text": "[Number of biological children] + 1", "effect_exec": "df.attr185 + 1", "effect_is_calculation": true, "used_attribute_ids": "[\"90\", \"92\", \"185\"]", "used_parameter_ids": "[50, 51, 52, 57, 58, 59, 60]", "is_conditionless": false, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 42, "fields": {"changed_var_attribute_id": 90, "changed_var_data_type": "int", "condition_text": "", "condition_exec": "", "effect_text": "[Age] + 1/[delta_t (years)]", "effect_exec": "df.attr90 + 1/(df.delta_t/31622400)", "effect_is_calculation": true, "used_attribute_ids": "[\"90\"]", "used_parameter_ids": "[]", "is_conditionless": true, "has_probability_1": true, "probability": null, "standard_dev": null}}, {"model": "collection.rule", "pk": 48, "fields": {"changed_var_attribute_id": 185, "changed_var_data_type": "int", "condition_text": "1/(1 + exp(12.514 - [weight_one_child] * ([Number of biological children] ==1)  -  [weight_two_children] * ([Number of biological children] ==2) + 7.91 * ([Number of biological children] >2) + 9.54 * ([Marital Status] =='Married')  + 0.042 * [Age] - 0.0022 * [Age]* [Age]  )) > df.randomNumber", "condition_exec": "1/(1 + exp(12.514 - df.param62 * (df.attr185 ==1)  -  df.param61 * (df.attr185 ==2) + 7.91 * (df.attr185 >2) + 9.54 * (\"df.attr92\" =='Married')  + 0.042 * df.attr90 - 0.0022 * df.attr90* df.attr90  )) > df.randomNumber", "effect_text": "[Number of biological children] + 1", "effect_exec": "df.attr185 + 1", "effect_is_calculation": true, "used_attribute_ids": "[\"90\", \"92\", \"185\"]", "used_parameter_ids": "[61, 62]", "is_conditionless": false, "has_probability_1": true, "probability": null, "standard_dev": null}}]